# -*- coding: utf-8 -*-
"""MapofCAZip.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EiM3e-_LtgylsTaDQusTa-FALYic2rTD
"""

import pandas as pd
import folium

map_ = folium.Map(location=[36.77, -119.41], zoom_start=6)
df = pd.read_csv("/content/CAZip-2017.csv")

locs = df[['lat', 'long']]
loc_list = locs.values.tolist()


for point in range(0, len(loc_list)):
    folium.Marker(loc_list[point]).add_to(map_)

map_

# QUIT CLOROPLETH AFTER TOO MANY ISSUES GETTING SHAPE FILES AT ZIP CODE LEVEL
#zip_code_geo = pd.read_json("/content/ca_california_zip_codes_geo.min.json")

#map_2 = folium.Map(location=[36.77, -119.41], zoom_start=6)

#folium.Choropleth(
 #   geo_data=zip_code_geo,
  #  name='choropleth',
   # data= df,
    #columns=['Zip_Code', 'Housing_Price'],
#    key_on='Zip_Code',
 #   fill_color='YlGn',
  #  fill_opacity=0.7,
   # line_opacity=0.2,
    #legend_name='Housing Price'
#).add_to(m)

#folium.LayerControl().add_to(m)

#map_2

!apt-get install libgeos-3.5.0
!apt-get install libgeos-dev
!pip install https://github.com/matplotlib/basemap/archive/master.zip

!pip install pyproj==1.9.6

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap

plt.figure(figsize=(8, 8))
m = Basemap(projection='ortho', resolution=None, lat_0=50, lon_0=-100)
m.bluemarble(scale=0.5);

# Extract the data we're interested in
lat = df['lat'].values
lon = df['long'].values
population = df['Population'].values
housingprice = df['Housing_Price'].values

#Housing Price Map
# 1. Draw the map background
fig = plt.figure(figsize=(8, 8))
m = Basemap(projection='lcc', resolution='h', 
            lat_0=37.5, lon_0=-119,
            width=1E6, height=1.2E6)
m.shadedrelief()
m.drawcoastlines(color='gray')
m.drawcountries(color='gray')
m.drawstates(color='gray')

# 2. scatter city data, with color reflecting population
# and size reflecting area
m.scatter(lon, lat, latlon=True,
          c=housingprice
          )

# 3. create colorbar and legend
plt.colorbar(label=r'housingprice')
plt.clim(3, 7)

# Population Map
# 1. Draw the map background
fig = plt.figure(figsize=(8, 8))
m2 = Basemap(projection='lcc', resolution='h', 
            lat_0=37.5, lon_0=-119,
            width=1E6, height=1.2E6)
m2.shadedrelief()
m2.drawcoastlines(color='gray')
m2.drawcountries(color='gray')
m2.drawstates(color='gray')

# 2. scatter city data, with color reflecting population
# and size reflecting area
m2.scatter(lon, lat, latlon=True,
          c=population
          )

# 3. create colorbar and legend
plt.colorbar(label=r'population')
plt.clim(3, 7)